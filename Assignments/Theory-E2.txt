1.  What is NPM?
    npm is the world's largest software registry. Open source developers from every continent use npm to share and borrow packages, 
    and many organizations use npm to manage private development as well.

2.  What is Parcel/Webpack? Why do we need it?
    - Parcel is a web application bundler, differentiated by its developer experience. 
      It offers blazing fast performance utilizing multicore processing, and requires zero configuration.
    - Parcel comes with a few extra tools built-in: a development server, diagnostics, minification, and even image compression.

3.  What is .parcel-cache?
    cache folder (or . parcel-cache in parcel v2) stores information about your project when parcel builds it, so that when it rebuilds, 
    it doesn't have to re-parse and re-analyze everything from scratch. It's a key reason why parcel can be so fast in development mode.

4.  What is npx?
    npx will check whether <command> exists in $PATH, or in the local project binaries, and execute it. 
    Another major advantage of npx is the ability to execute a package which wasn't previously installed.

5.  What is difference between `dependencies` vs `devDependencies`
    - The difference between these two, is that devDependencies are modules which are only required during development, 
      while dependencies are modules which are also required at runtime.
    - To save a dependency as a devDependency on installation we need to do an npm install --save-dev, 
      instead of just an npm install --save. A nice shorthand for installing a devDependency that is npm i -D. 
      The shorthand for saving a regular dependency is -S instead of -D.

6.  What is Tree Shaking?
    - Tree shaking is a term commonly used within a JavaScript context to describe the removal of dead code.
    - It relies on the import and export statements to detect if code modules are exported and imported for use between JavaScript files.
    - In modern JavaScript applications, we use module bundlers to automatically remove dead code when bundling multiple JavaScript files into single files. 
      This is important for preparing code that is production ready, for example with clean structures and minimal file size.

7.  What is Hot Module Replacement?
    By default, Parcel fully reloads the page, but in some cases it may perform Hot Module Replacement (HMR). 
    HMR improves the development experience by updating modules in the browser at runtime without needing a whole page refresh. 
    This means that application state can be retained as you change small things in your code.

8.  List down your favourite 5 superpowers of Parcel and describe any 3 of them in your own words.
    - Dev server
        Parcel provides built-in dev server which is automatically started when we run the command "parcel" followed by filename/starting location. 
        It starts a server at "http://localhost:1234". If port is already in use, than a different port is used.

    - Hot reloading
        When we make a change, parcel automatically updated our code or make changes in the brower.

    - Caching
        Parcel caches everything it builds to disk. If you restart the dev server, Parcel will only rebuild files that have changed since the last time it ran. 
        By default, the cache is stored in the .parcel-cache folder inside your project. 
        For eg: if you change a configuration file, all of the source files that rely on that configuration will be rebuilt.

    - Minification
        Parcel provides minifiers for HTML, CSS, JavaScript, React and other built-in. Minification reduces the file size by removing console logs, whitespaces, renaming variables and many other.

    - Image optimization
        Parcel supports resizing, converting, and optimizing images. You can use query parameters when referencing an image in HTML, CSS, or JavaScript to specify which format and size the image should be converted to.
        Resizing and converting images occurs both in development and production mode.

9.  What is .gitignore? What should we add and not add into it?
    A .gitignore file is a text file that tells Git which files or folders to ignore in a project.
    - We should add files/folder related to our work.
    - Common types of files/folder we would ignore
        - OS files
        - Application files
        - Files downloaded with package manager (Eg: node_modules folder)
        - Credentials

10. What is the difference between `package.json` and `package-lock.json`?
    - A package.json is a versioning file used to install multiple packages in your project. As you initialize your application, 
      you will see three files installed in your app that is node_modules, package.json, and package.lock.json.
        - It contains information such as name, description, author, script, and dependencies.
    
    - A package.lock.json is created for locking the dependency with the installed version.
        - It contains the name, dependencies, and locked version of the project. 

11. Why should I not modify `package-lock.json`?
    The `package-lock.json` file was introduced in npm version 5. It is a generated file and is not designed to be manually edited. 
    Its purpose is to track the entire tree of dependencies (including dependencies of dependencies) and the exact version of each dependency.
    You should commit package-lock.json to your code repository. Sharing this file with teammates and the production environment 
    is the best way to make sure that everyone has the same configuration for their copy of the project.

12. What is `node_modules` ? Is it a good idea to push that on git?
    The node_modules folder is used to save all downloaded packages from npm in our project. We don't need to push node_modules to git.

13. What is the `dist` folder?
    The dist folder contains the minimized version of the source code. The code present in the dist folder is actually the code 
    which is used on production web applications.

14. What is browserslist?
    Browserslist is a tool that allows specifying which browsers should be supported in your frontend app by specifying "queries" 
    in a config file. It's used by frameworks/libraries such as React, Angular and Vue, but it's not limited to them.